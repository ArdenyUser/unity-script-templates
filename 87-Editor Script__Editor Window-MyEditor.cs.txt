using UnityEngine;
using UnityEditor;

//using System;
//using System.Collections.Generic;

//using MuffinTools;

///<summary>
/// 
///</summary>
public class #SCRIPTNAME# : EditorWindow
{

	#region Properties

	// Constants

	private const string EDITOR_WINDOW_MENU_ITEM = "Tools/#SCRIPTNAME#";
	private const string EDITOR_WINDOW_TITLE = "#SCRIPTNAME#";
	private const int EDITOR_WINDOW_PRIORITY = 1;

	#endregion


	#region Lifecycle

	//private void OnEnable()
	//{
	
	//}

	#endregion


	#region UI

	//private void OnGUI()
	//{
		
	//}

	#endregion


	#region Public Methods
	#endregion


	#region Private Methods
		
	/// <summary>
	/// Gets the window of this tool, or create it if it's not already open.
	/// </summary>
	[MenuItem(EDITOR_WINDOW_MENU_ITEM, false, EDITOR_WINDOW_PRIORITY)]
	private static void ShowWindow()
	{
		#SCRIPTNAME# window = EditorWindow.GetWindow<#SCRIPTNAME#>(false, EDITOR_WINDOW_TITLE, true) as #SCRIPTNAME#;
		window.Show();
	}

	/// <summary>
	/// Determines if the tool's window can be open or not.
	/// </summary>
	/// <returns>Returns true if the window can be open, otherwise false.</returns>
	[MenuItem(EDITOR_WINDOW_MENU_ITEM, true, EDITOR_WINDOW_PRIORITY)]
	private static bool CanShowWindow()
	{
		return true;
	}

	#endregion

}